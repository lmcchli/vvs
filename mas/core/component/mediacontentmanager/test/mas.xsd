<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:element name="configuration" nillable="false">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="contenttypemapper"/>
                <xs:element ref="externalcomponentregister"/>
                <xs:element ref="mediacontentmanager"/>
                <xs:element ref="stream"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="codec">
        <xs:complexType>
            <xs:attribute name="mimetype" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="contenttype">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="codec" maxOccurs="unbounded"/>
                <xs:element ref="fileext"/>
            </xs:sequence>
            <xs:attribute name="mimetype" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="contenttypemapper">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="contenttype" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="fileext">
        <xs:complexType>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="externalcomponentregister">
        <xs:complexType>
            <xs:all>
                <xs:element ref="mcr"/>
                <xs:element ref="propertymap"/>
                <xs:element ref="services"/>
                <xs:element ref="algorithms"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:element name="mcr">
        <xs:complexType>
            <xs:attribute name="hostname" type="xs:string"/>
            <xs:attribute name="port" type="xs:integer"/>
            <xs:attribute name="timeout" type="xs:integer"/>
            <xs:attribute name="userid" type="xs:string"/>
            <xs:attribute name="password" type="xs:string"/>
            <xs:attribute name="suffix" type="xs:string"/>
            <xs:attribute name="periodicity" type="xs:integer"/>
            <xs:attribute name="trylimit" type="xs:integer" use="required"/>
            <xs:attribute name="trytimelimit" type="xs:integer" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="value">
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:element name="propertymap">
        <xs:complexType>
            <xs:all>
                <xs:element name="port" type="mcrproperty"/>
                <xs:element name="protocol" type="mcrproperty"/>
                <xs:element name="version" type="mcrproperty"/>
                <xs:element name="hostname" type="mcrproperty"/>
                <xs:element name="logicalzone" type="mcrproperty"/>
                <xs:element name="component" type="mcrproperty"/>
                <xs:element name="type" type="mcrproperty"/>
                <xs:element name="rootoid" type="mcrproperty"/>
                <xs:element name="language" type="mcrproperty"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="mcrproperty">
        <xs:attribute name="mcrname" type="xs:string"/>
    </xs:complexType>
    <xs:element name="services">
        <xs:complexType>
            <xs:all>
                <xs:element name="storage" type="service"/>
                <xs:element name="smtpstorage" type="service"/>
                <xs:element name="userregister" type="service"/>
                <xs:element name="userregisterwrite" type="service" minOccurs="0"/>
                <xs:element name="eventreporting" type="service"/>
                <xs:element name="texttospeech" type="service"/>
                <xs:element name="speechrecognition" type="service"/>
                <xs:element name="provision" type="service"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="service">
        <xs:sequence>
            <xs:element name="default" type="instanceproperties" minOccurs="0"/>
            <xs:element name="instance" type="instanceproperties" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="overridemcr" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="yes|no"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="instanceproperties">
        <xs:attribute name="port" type="xs:string"/>
        <xs:attribute name="hostname" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="protocol" type="xs:string"/>
        <xs:attribute name="component" type="xs:string"/>
    </xs:complexType>
    <xs:element name="algorithms">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="localrandomchooser"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="localrandomchooser">
        <xs:complexType>
            <xs:attribute name="logicalzone" type="xs:string"/>
            <xs:attribute name="netmask" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="mediacontentmanager">
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>
                        Cache is optional. If none given, no cache is used by the MediaContentManager.
                    </xs:documentation>
                </xs:annotation>
                <xs:element ref="mediaobjectcache" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="resourcepath" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="mediaobjectcache">
        <xs:annotation>
            <xs:documentation>
                Configuration for the MediaObject cache.
                Policy is the caching policy that is used. See type policyType
                maxSize is the max number of MediaObjects in the cache.
                elementTimeout is the timeout in seconds for an element.
                memorySensitive If set to true the elements in the cache is available for garbage collection
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="policy" type="policyType" use="required"/>
            <xs:attribute name="maxsize" type="xs:positiveInteger" use="required"/>
            <xs:attribute name="elementtimeout" type="xs:positiveInteger" use="required"/>
            <xs:attribute name="memorysensitive" type="xs:boolean" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="policyType">
        <xs:annotation>
            <xs:documentation>
                Enumeration of policy policies.
                LFU=  Least frequently used
                FIFO= First in first out
                LRU=  Least recently used)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="fifo"/>
            <xs:enumeration value="lfu"/>
            <xs:enumeration value="lru"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="stream">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element ref="supportedcontenttype" maxOccurs="unbounded"/>
                <xs:element ref="rtppayloaddef" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="portpoolsize" type="xs:positiveInteger" use="optional" default="300"/>
            <xs:attribute name="portpoolbase" type="xs:positiveInteger" use="optional" default="23000"/>
            <xs:attribute name="threadpoolsize" type="xs:positiveInteger" use="optional" default="135"/>
            <xs:attribute name="threadpoolmaxwaittimesec" type="xs:positiveInteger" use="optional" default="240"/>
            <xs:attribute name="synccallmaxwaittimesec" type="xs:positiveInteger" use="optional" default="120"/>
            <xs:attribute name="usepoolforrtpsessions" type="xs:boolean" use="optional" default="false"/>
            <xs:attribute name="packetpendtimeoutmicrosec" type="xs:nonNegativeInteger" use="optional" default="5000"/>
            <xs:attribute name="sendpacketsaheadms" type="xs:nonNegativeInteger" use="optional" default="40"/>
            <xs:attribute name="expiretimeoutms" type="xs:positiveInteger" use="optional" default="100000000"/>
            <xs:attribute name="streamabandonedms" type="xs:positiveInteger" use="optional" default="240000"/>
            <xs:attribute name="senderscontrolfraction" type="xs:decimal" use="optional" default="0.5"/>
            <xs:attribute name="audioreplacewithsilencems" type="xs:nonNegativeInteger" use="optional" default="0"/>
            <xs:attribute name="localhostname" type="xs:string" use="optional" default="0.0.0.0"/>
            <xs:attribute name="dispatchdtmfonkeydown" type="xs:boolean" use="optional" default="true"/>
            <xs:attribute name="maximumtransmissionunit" type="xs:positiveInteger" use="optional" default="1500"/>
            <xs:attribute name="skew" type="xs:integer" use="optional" default="0"/>
            <xs:attribute name="skewmethod" type="xs:string" use="optional" default="LOCAL_AND_RTCP"/>
            <xs:attribute name="audioskipms" type="xs:nonNegativeInteger" use="optional" default="0"/>
            <xs:attribute name="maxwaitforiframems" type="xs:nonNegativeInteger" use="optional" default="2000"/>
            <xs:attribute name="defaultinboundptime" type="xs:positiveInteger" use="optional" default="40"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="supportedcontenttype">
        <!-- All supported content-types, for example "audio/wav", "video/quicktime"-->
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="rtppayloaddef">
        <!-- Definitions for all supported rtppayloads -->
        <xs:complexType>
            <xs:attribute name="primarytype" type="xs:string" use="required"/>
            <xs:attribute name="subtype" type="xs:string" use="required"/>
            <xs:attribute name="rtppayload" type="xs:nonNegativeInteger" use="required"/>
            <xs:attribute name="encoding" type="xs:string" use="required"/>
            <xs:attribute name="clockrate" type="xs:positiveInteger" use="required"/>
            <!-- Primary type in lower-case, for example "audio", "video", "text"  -->
            <!-- Sub-type in lower-case, for example "pcmu", "h263", "telephone-event"  -->
            <!-- RTP payload (as defined in RFC3551 for static types).  -->
            <!-- Encoding as defined by IANA (case-sensitive). -->
            <!-- Clockrate in Hz. -->
        </xs:complexType>
    </xs:element>

</xs:schema>
